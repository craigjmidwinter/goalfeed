name: Tag and Release

on:
  push:
    branches:
      - 'main'
  pull_request:
    branches:
      - 'main'

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.21'

      - name: Run tests
        run: go test ./...

  bump-version:
    if: github.event_name == 'push'
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Bump version and push tag
        id: bump-version
        run: |
          git fetch --tags
          latestTag=$(git describe --tags `git rev-list --tags --max-count=1`)
          
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            # If on main branch, increment the patch version
            newTag=$(echo $latestTag | awk -F. '{$NF = $NF + 1;} 1' OFS=.)
          else
            # If on another branch, append the branch name to the version
            branchName=$(echo "${{ github.ref }}" | sed -r "s/refs/heads\///g" | sed "s/\//-/g")
            newTag="${latestTag}-${branchName}"
          fi
          
          git tag $newTag
          git push origin $newTag
          echo "NEW_TAG=${newTag}" >> $GITHUB_ENV
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GIT_COMMITTER_NAME: github-actions
          GIT_COMMITTER_EMAIL: github-actions@github.com

  goreleaser:
    if: github.event_name == 'push'
    needs: bump-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.21

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  create-pr:
    needs: goreleaser
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Get latest release tag
        id: get-tag
        run: echo "::set-output name=tag::$(git describe --tags --abbrev=0)"

      - name: Create PR in hassio-goalfeed-repository
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "Update Goalfeed Addon to version ${{ steps.get-tag.outputs.tag }}"
          title: "Update Goalfeed Addon to version ${{ steps.get-tag.outputs.tag }}"
          branch: "update-version-${{ steps.get-tag.outputs.tag }}"
          base: "main"
          repository: "goalfeed/hassio-goalfeed-repository"
          path: "goalfeed"
          modify-files: |
            sed -i 's/^version: .*/version: ${{ steps.get-tag.outputs.tag }}/' config.yaml
            sed -i 's/ARG GOALFEED_VERSION=.*/ARG GOALFEED_VERSION=${{ steps.get-tag.outputs.tag }}/' Dockerfile
